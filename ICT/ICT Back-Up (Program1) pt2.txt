package perosnal_timetable;

import javax.swing.*;
import java.io.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.util.*;
import java.io.*;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.TrayIcon;

public class Perosnal_TimeTable {

    private static TrayIcon trayIcon;
    private static String directory = null;

    public static void main(String[] args) {
        //Start-Up
        minimizeToTray();
        JOptionPane.showMessageDialog(null, "This Software Will Alert You Of Your Next Subject,\nClass Names Will Be In The Title Of The Popup\n\nLets Start With Setting Your Software Up", "START-UP", JOptionPane.INFORMATION_MESSAGE);

        int Digi = JOptionPane.showConfirmDialog(null, "Do You Have A Digital Time Table?", "Getting Started", JOptionPane.YES_NO_OPTION);

        if (Digi == JOptionPane.NO_OPTION) {
            HandGuide();
        }
        if (Digi == JOptionPane.YES_OPTION) {
            showTimeTable();
        }

        //Variables
        ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

        int[] currentTime = new int[2];

        scheduler.scheduleAtFixedRate(() -> {
            currentTime[0] = LocalTime.now().getHour();
            currentTime[1] = LocalTime.now().getMinute();
        }, 0, 45, TimeUnit.SECONDS);

        int CurrentHour = currentTime[0];
        int CurrentMinute = currentTime[1];
        LocalDate CurrentDate = LocalDate.now();
        DateTimeFormatter Format = DateTimeFormatter.ofPattern("E");
        String CurrentDayAbv = CurrentDate.format(Format);

        //Text Arrays
        String[] DayStart = {"Hurry, Get To Registration!", "School Has Started!", "Reg Has Started!"};
        Random Random = new Random();
        int Index = Random.nextInt(DayStart.length);
        String Selected = DayStart[Index];

        while (CurrentHour == 8 && CurrentMinute == 35) {
            JOptionPane.showMessageDialog(null, Selected, "ALERT!", JOptionPane.WARNING_MESSAGE);

        }

        //Monday Table
        while (CurrentDayAbv.equals("Mon")) {
            if (CurrentHour == 8 && CurrentMinute == 43) {
                JOptionPane.showMessageDialog(null, "You Have Physics Next!", "S12", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 8 && CurrentMinute == 41) {
                JOptionPane.showMessageDialog(null, "You Have Accounting Up Next!", "HB2", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 10 && CurrentMinute == 39) {
                JOptionPane.showMessageDialog(null, "Take A Break!");
            }
            if (CurrentHour == 10 && CurrentMinute == 59) {
                JOptionPane.showMessageDialog(null, "Your Break Is Over, Head To The Library!", "Adjacent The A20", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 11 && CurrentMinute == 57) {
                JOptionPane.showMessageDialog(null, "Time's Up, Head To English Class Next!", "A15", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 12 && CurrentMinute == 55) {
                JOptionPane.showMessageDialog(null, "Take A Second Break For The Day!");
            }
            if (CurrentHour == 13 && CurrentMinute == 35) {
                JOptionPane.showMessageDialog(null, "Break Is Over, Go To Your Comp Sci Class", "A20", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 14 && CurrentMinute == 33) {
                JOptionPane.showMessageDialog(null, "Comp Sci Has Ended, Go To Mathematics Next", "M26", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 15 && CurrentMinute == 30) {
                JOptionPane.showMessageDialog(null, "School Has Ended For The Day...");
                break;
            }
        }

        //Tuesday Table
        while (CurrentDayAbv.equals("Tue")) {
            if (CurrentHour == 8 && CurrentMinute == 43) {
                JOptionPane.showMessageDialog(null, "Up Next, General Studies!", "A15", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 8 && CurrentMinute == 41) {
                JOptionPane.showMessageDialog(null, "Great, Go To Comp Sci Next", "A20", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 10 && CurrentMinute == 39) {
                JOptionPane.showMessageDialog(null, "Take A Break!");
            }
            if (CurrentHour == 10 && CurrentMinute == 59) {
                JOptionPane.showMessageDialog(null, "Your Break Is Over, Prepare For PE", "Fields", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 11 && CurrentMinute == 57) {
                JOptionPane.showMessageDialog(null, "You Would Be In Your Second Hour Of PE\nYou Probably Wont See This\nOr The Next Alert", "A15", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 12 && CurrentMinute == 55) {
                JOptionPane.showMessageDialog(null, "Take A Second Break For The Day!");
            }
            if (CurrentHour == 13 && CurrentMinute == 35) {
                JOptionPane.showMessageDialog(null, "Break Is Over, Get Ready To Learn About History", "HB5", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 14 && CurrentMinute == 33) {
                JOptionPane.showMessageDialog(null, "Great, Stay in H-Block, For Business", "HB2", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 15 && CurrentMinute == 30) {
                JOptionPane.showMessageDialog(null, "School Has Ended For The Day...");
                break;
            }
        }

        //WednesDay Table
        while (CurrentDayAbv.equals("Wed")) {
            if (CurrentHour == 8 && CurrentMinute == 43) {
                JOptionPane.showMessageDialog(null, "You Have Physics Next!", "S12", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 8 && CurrentMinute == 41) {
                JOptionPane.showMessageDialog(null, "You're Up For First Aid Now", "L1", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 10 && CurrentMinute == 39) {
                JOptionPane.showMessageDialog(null, "Take A Break!");
            }
            if (CurrentHour == 10 && CurrentMinute == 59) {
                JOptionPane.showMessageDialog(null, "Your Break Is Over, Head Over To Business Class", "HB2", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 11 && CurrentMinute == 57) {
                JOptionPane.showMessageDialog(null, "Stay In H-Block, Even In The Same Class, For Accounting", "HB2", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 12 && CurrentMinute == 55) {
                JOptionPane.showMessageDialog(null, "School Has Ended For The Day...");
            }
        }

        //Thursday Table
        while (CurrentDayAbv.equals("Thu")) {
            if (CurrentHour == 8 && CurrentMinute == 43) {
                JOptionPane.showMessageDialog(null, "Head To H-Block For Phsycology", "HB3", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 8 && CurrentMinute == 41) {
                JOptionPane.showMessageDialog(null, "Two Mind Based Subjects, Head To Wellbeing", "S9", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 10 && CurrentMinute == 39) {
                JOptionPane.showMessageDialog(null, "Take A Break!\n\nTyping The Same Thing Four Times In A Row Is Boring\nGood Thing Programmer Used Copy Paste!");
            }
            if (CurrentHour == 10 && CurrentMinute == 59) {
                JOptionPane.showMessageDialog(null, "Your Break Is Over, Head Over To Futures Class", "A20", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 11 && CurrentMinute == 57) {
                JOptionPane.showMessageDialog(null, "Library's Up Next", "Adjacent The A20", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 12 && CurrentMinute == 55) {
                JOptionPane.showMessageDialog(null, "Take A Second Break For The Day!\n\nProgrammer Hasent Even Taken One");
            }
            if (CurrentHour == 13 && CurrentMinute == 35) {
                JOptionPane.showMessageDialog(null, "Break Is Over, Stimulate You Brain With Maths", "M26", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 14 && CurrentMinute == 33) {
                JOptionPane.showMessageDialog(null, "Head Over To Your Matrix Class", "HB7", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 15 && CurrentMinute == 30) {
                JOptionPane.showMessageDialog(null, "School Has Ended For The Day...");
                break;
            }
        }

        //Friday Table
        while (CurrentDayAbv.equals("Fri")) {
            if (CurrentHour == 8 && CurrentMinute == 43) {
                JOptionPane.showMessageDialog(null, "History, Up Next", "HB5", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 8 && CurrentMinute == 41) {
                JOptionPane.showMessageDialog(null, "Staying In The H-Block, Law", "HB7", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 10 && CurrentMinute == 39) {
                JOptionPane.showMessageDialog(null, "Take A Break!");
            }
            if (CurrentHour == 10 && CurrentMinute == 59) {
                JOptionPane.showMessageDialog(null, "General Studies!", "A15", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 11 && CurrentMinute == 57) {
                JOptionPane.showMessageDialog(null, "English, In The Exact Same Class!", "A15", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 12 && CurrentMinute == 55) {
                JOptionPane.showMessageDialog(null, "Take A Second Break For The Day!\n\nProgrammer Has Not Taken A Break In 9.5 Hours!!!");
            }
            if (CurrentHour == 13 && CurrentMinute == 35) {
                JOptionPane.showMessageDialog(null, "Break Is Over, Head Over To Finance", "HB1", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 14 && CurrentMinute == 33) {
                JOptionPane.showMessageDialog(null, "Staying Yet Again In The Same Class, Mini Company!", "HB1", JOptionPane.INFORMATION_MESSAGE);
            }
            if (CurrentHour == 15 && CurrentMinute == 30) {
                JOptionPane.showMessageDialog(null, "School Has Ended For The Day...\n\nEnjoy Your Weekend!");
                break;
            }
        }
    }

    private static void minimizeToTray() {
        if (!SystemTray.isSupported()) {
            System.out.println("SystemTray is not supported");
            return;
        }
        try {
            final SystemTray tray = SystemTray.getSystemTray();
            ImageIcon imageIcon = new ImageIcon("/home/kai/Downloads/SPSS.jpeg");
            trayIcon = new TrayIcon(imageIcon.getImage(), "Sutton Park School TimeTable");
            trayIcon.setImageAutoSize(true);

            // Create popup menu
            PopupMenu popupMenu = new PopupMenu();

            // Add show timetable item
            MenuItem showTimetableItem = new MenuItem("Show Timetable");
            showTimetableItem.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    showTimeTable();
                }
            });
            popupMenu.add(showTimetableItem);

            // Add exit item
            MenuItem exitItem = new MenuItem("Exit");
            exitItem.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.exit(0);
                }
            });
            popupMenu.add(exitItem);

            // Set popup menu to tray icon
            trayIcon.setPopupMenu(popupMenu);

            // Add mouse listener to tray icon
            trayIcon.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    if (e.getButton() == MouseEvent.BUTTON1) { // Left click
                        if (e.getClickCount() == 2) {
                            showTimeTable();
                        }
                    } else if (e.getButton() == MouseEvent.BUTTON3) { // Right click
                        TrayIcon trayIcon = SystemTray.getSystemTray().getTrayIcons()[0]; // Assuming there's only one tray icon
                        trayIcon.getPopupMenu().show(null, e.getX(), e.getY());
                    }
                }
            });

            // Add tray icon to system tray
            tray.add(trayIcon);
        } catch (AWTException e) {
            System.out.println("TrayIcon could not be added.");
        }
    }

    private static void closeApplication() {
        if (!SystemTray.isSupported()) {
            System.out.println("SystemTray is not supported");
            return;
        }

        try {
            final SystemTray tray = SystemTray.getSystemTray();
            ImageIcon imageIcon = new ImageIcon("/home/kai/Downloads/SPSS.jpeg");
            TrayIcon trayIcon = new TrayIcon(imageIcon.getImage(), "Sutton Park School TimeTable");
            trayIcon.setImageAutoSize(true);

            // Create popup menu
            PopupMenu popupMenu = new PopupMenu();

            // Add exit item
            MenuItem exitItem = new MenuItem("Exit");
            exitItem.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.exit(0);
                }
            });
            popupMenu.add(exitItem);

            // Set popup menu to tray icon
            trayIcon.setPopupMenu(popupMenu);

            // Add tray icon to system tray
            tray.add(trayIcon);
        } catch (AWTException e) {
            System.out.println("TrayIcon could not be added.");
        }
    }

    private static void showTimeTable() {
        if (directory == null) {
            // If the directory is not set, prompt the user to enter it 
            directory = JOptionPane.showInputDialog("Enter Your Directory: ");
        }

        try {
            Desktop.getDesktop().open(new File(directory));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    public static void HandGuide() {
        char HandGuide = JOptionPane.showInputDialog("What Is The Issue: "
                + "\nA. Digital Time Table"
                + "\nB.Notification Glitch (E.G Doesnt Show Notification)"
                + "\nC.Notification Error (E.G Wrong Class)"
                + "\nD.Spelling/Text Error"
                + "\nE. Other").toUpperCase().charAt(0);

        if (HandGuide == 'a') {
            JOptionPane.showMessageDialog(null, "1. Setting Up Digital Time Table"
                    + "\n\nTo Set Up Your Digital Time Table,"
                    + "\n1. Please Take A picture Of Scan Your Timetable"
                    + "\n2. Send The Image To Your Desktop, Remember The File Directory (Where The File Is Saved)"
                    + "\n3. ReLaunch The Program"
                    + "\n4. Click ''Yes'' And Enter Your File Directory For The Time Table", "Guide", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
